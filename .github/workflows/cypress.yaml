name: Cypress Tests

on:
  pull_request:
    branches:
      - develop
      - staging
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cypress-run:
    permissions: write-all
    if: github.repository == 'ohcnetwork/care_fe'
    runs-on: ubuntu-latest
    env:
      REACT_CARE_API_URL: http://localhost:9000
      REACT_ENABLED_APPS: "ohcnetwork/care_hcx_fe@main"
      REACT_ENABLE_HCX: true
    steps:
      - name: Checkout üì•
        uses: actions/checkout@v3

      - name: Set backend branch
        id: backend-branch
        run: |
          if [[ '${{ github.event.pull_request.base.ref }}' == 'staging' ]]; then
            echo "branch=staging" >> $GITHUB_OUTPUT
          else
            echo "branch=develop" >> $GITHUB_OUTPUT
          fi

      - name: Checkout care üì•
        uses: actions/checkout@v3
        with:
          repository: ohcnetwork/care
          path: care
          ref: ${{ steps.backend-branch.outputs.branch }}

      - name: Start care docker containers üê≥
        run: |
          cd care
          echo DISABLE_RATELIMIT=True >> docker/.prebuilt.env
          echo "CORS_ALLOWED_ORIGINS=\"[\\\"http://localhost:4000\\\"]\"" >> docker/.prebuilt.env
          echo JWKS_BASE64=\"$(cat ../.github/runner-files/jwks.b64.txt)\" >> docker/.prebuilt.env
          docker compose -f docker-compose.yaml -f $(docker_config_file) up -d db
          # load the db dump from the artifact if it exists else do the usual
          set -e
          {
            archive_download_url=$(curl -sf "https://api.github.com/repos/ohcnetwork/care/actions/artifacts?name=care-db-dump" | jq -r '.artifacts[0].archive_download_url')
            curl -Lf -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o care-db-dump.zip "$archive_download_url"
            unzip care-db-dump.zip
            make load-db
            make docker_config_file=docker-compose.pre-built.yaml up
          } || {
            make docker_config_file=docker-compose.pre-built.yaml up load-dummy-data
          }
          cd ..

      - name: Determine PR Origin  
        id: pr_origin  
        run: echo "is_forked=${{ github.event.pull_request.head.repo.fork }}" >> $GITHUB_OUTPUT 
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies üì¶
        run: npm run install-all

      - name: Build ‚öôÔ∏è
        run: npm run build

      - name: Install Specific Chrome Version
        run: |
          sudo apt-get install -y wget
          sudo wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get install ./google-chrome-stable_current_amd64.deb

      - name: Run Cypress Tests in Parallel
        run: |
          (npm run preview -- --host 127.0.0.1 &)
          npx wait-on --timeout 60000 http://127.0.0.1:4000 || (  
            echo "Frontend server failed to start within timeout"  
            exit 1  
          )
          npm run cy:parallel

      -  name: Upload Cypress Screenshots
         uses: actions/upload-artifact@v3
         if: failure()
         with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: Upload Cypress Videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
